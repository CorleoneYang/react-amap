{"version":3,"sources":["../src/Map/README.md"],"names":[],"mappings":"6HAAA,OAAe","file":"static/js/585.d6250946.chunk.js","sourcesContent":["export default \"Map 组件\\n===\\n\\nMap 组件是其他组件的基础，Map 组件会给所有的子组件注入两个属性 **`map`**，**`container`** 和 **`AMap`**，\\n\\n⚠️ 注意\\n\\n> 1. 组件 `<Map>` 必须包裹在 `<APILoader>` 组件内，该组件作用是加载高德地图 SDK。  \\n> 2. 其他地图组件必须作为 `<Map>` 的子组件使用；\\n\\n```jsx\\nimport { Map, APILoader } from '@uiw/react-amap';\\n```\\n\\n### 基本用法\\n\\nMap 的父组件必须具有宽度和高度；\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { Map, APILoader } from '@uiw/react-amap';\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%', height: '300px' }}>\\n    <APILoader akay=\\\"1c44726c39431f704d3e25cd51381e35\\\">\\n      <Map />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n<!--End-->\\n\\n### 参数设置\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { React, Fragment } from 'react';\\nimport { Map, APILoader } from '@uiw/react-amap';\\n\\nfunction Demo() {\\n  const [dragEnable, setDragEnable] = useState(true);\\n  const [display, setDisplay] = useState(true);\\n  return (\\n    <Fragment>\\n      <button onClick={() => setDragEnable(!dragEnable)}>{dragEnable ? '禁用' : '启用'}拖拽</button>\\n      <button onClick={() => setDisplay(!display)}>{display ? '卸载' : '加载'}地图</button>\\n      {display ? <Map dragEnable={dragEnable} /> : null}\\n    </Fragment>\\n  );\\n}\\n\\nReactDOM.render((\\n  <div style={{ width: '100%', height: '200px' }}>\\n    <APILoader akay=\\\"1c44726c39431f704d3e25cd51381e35\\\">\\n      <Demo />\\n    </APILoader>\\n  </div>\\n), _mount_);\\n```\\n<!--End-->\\n\\n### Ref\\n\\n获取地图实例对象。\\n\\n<!--DemoStart,bgWhite--> \\n```jsx\\nimport { React, useEffect, Fragment } from 'react';\\nimport { Map, APILoader } from '@uiw/react-amap';\\n\\nfunction Demo() {\\n  const mapRef = useRef();\\n  useEffect(() => {\\n    console.log('mapRef:', mapRef);\\n  }, []);\\n  return (\\n    <Fragment>\\n      <Map ref={(instance) => {\\n        if (instance && instance.map) {\\n          console.log('instance', instance);\\n        }\\n      }} /> \\n      <Map ref={mapRef} /> \\n    </Fragment>\\n  );\\n}\\n\\nReactDOM.render((\\n  <div style={{ width: '100%', height: '200px' }}>\\n    <APILoader akay=\\\"1c44726c39431f704d3e25cd51381e35\\\">\\n      <Demo />\\n    </APILoader>\\n  </div>\\n), _mount_);\\n```\\n<!--End-->\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| center | 初始中心经纬度 | `[number, number] | LngLat` | - |\\n\\n### 事件\\n\\n| 参数 | 说明 | 类型 |\\n| ----- | ----- | ----- |\\n| - | - | - |\";"],"sourceRoot":""}